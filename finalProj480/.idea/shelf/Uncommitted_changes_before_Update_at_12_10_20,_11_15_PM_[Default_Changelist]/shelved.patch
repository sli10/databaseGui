Index: src/MyConnection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Random;\nimport java.util.Scanner;\nimport java.sql.*;\nimport java.sql.DriverManager;\n\npublic class MyConnection {\n    Connection con;\n    int seed = 1;\n    String query = \"SELECT * FROM tvShows.Shows WHERE \";\n    String title, description, genre, IMBD, rottenScore, age, released, seasons, stream;\n    String movieTitleLogin = \"\";\n    String userName, password;\n    ArrayList<String> titleList = new ArrayList<String>();\n    HashMap<String,String> descriptionMap = new HashMap<String,String>();\n    HashMap<String,String> genreMap = new HashMap<String,String>();\n    HashMap<String,String> IMBDMap = new HashMap<String,String>();\n    HashMap<String,String> rottenMap = new HashMap<String,String>();\n    HashMap<String,String> ageMap = new HashMap<String,String>();\n    HashMap<String,String> releasedMap = new HashMap<String,String>();\n    HashMap<String,String> numOfSeasonsMap = new HashMap<String,String>();\n    HashMap<String,String> streamMap = new HashMap<String,String>();\n\n\n    public void connect() throws FileNotFoundException {\n        String MySQLURL = \"jdbc:mysql://localhost:3306/tvShows?useSSL=false\";\n\n        //get the current connection\n        URL path = MyConnection.class.getResource(\"connectInfo.txt\");\n        File file = new File(path.getFile());\n        Scanner sc = new Scanner(file);\n        sc.useDelimiter(\" \");\n\n        String databaseUserName = sc.next();\n        String databasePassword = sc.next();\n        con = null;\n\n        try {\n\n            // open connection\n            con = DriverManager.getConnection(MySQLURL, databaseUserName, databasePassword);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void getPlatform(String platform) {\n        query += \"StreamingPlatform = '\";\n        query += platform;\n        query += \"'\";\n    }\n\n    public void getGenre(String genre) {\n        query += \" AND Genre LIKE '\";\n        query += genre;\n        query += \"%'\";\n        query += \" OR Genre LIKE \";\n        query += \"'%\";\n        query += genre;\n        query += \"'\";\n    }\n\n    public void getRange(String currRange) {\n        String temp = currRange;\n        String delims = \"-\";\n        String[] tokens = temp.split(delims);\n\n        String firstNum = tokens[0];\n        String secondNum = tokens[1];\n\n        query += \" AND \";\n        query += firstNum;\n        query += \" <= IMBDRating AND \";\n        query += secondNum;\n        query += \" >= IMBDRating\";\n    }\n\n    public void getContent(String content) {\n        query += \" AND ContentRating = \";\n        query += content;\n    }\n\n    public int runQuery() {\n        ResultSet resultSet = null;\n        System.out.println(\"query: \" + query);\n        try {\n            if (con != null) {\n                Statement stmt = con.createStatement();\n\n                resultSet = stmt.executeQuery(query);\n\n                if (resultSet == null) {\n                    System.out.println(\"no show\");\n                }\n                else {\n                    while (resultSet.next()) {\n                        titleList.add(resultSet.getString(\"Title\"));\n                        releasedMap.put(resultSet.getString(\"Title\"),resultSet.getString(\"Released\"));\n                        ageMap.put(resultSet.getString(\"Title\"),resultSet.getString(\"ContentRating\"));\n                        IMBDMap.put(resultSet.getString(\"Title\"),resultSet.getString(\"IMBDRating\"));\n                        rottenMap.put(resultSet.getString(\"Title\"),resultSet.getString(\"RottenRating\"));\n                        genreMap.put(resultSet.getString(\"Title\"),resultSet.getString(\"Genre\"));\n                        descriptionMap.put(resultSet.getString(\"Title\"),resultSet.getString(\"Description\"));\n                        numOfSeasonsMap.put(resultSet.getString(\"Title\"),resultSet.getString(\"NumOfSeasons\"));\n                        streamMap.put(resultSet.getString(\"Title\"),resultSet.getString(\"StreamingPlatform\"));\n                    }\n                }\n\n\n            }\n        } catch (Exception e) {\n            return 0;\n        }\n\n        return 1;\n    }\n\n    public void pickOne() {\n\n        if (releasedMap.size() > 0) {\n            Random rand = new Random();\n            rand.setSeed(seed);\n            int randIndex = rand.nextInt(releasedMap.size() - 1 - 1) + 1;\n            title = titleList.get(randIndex);\n            released = releasedMap.get(title);\n            age = ageMap.get(title);\n            IMBD = IMBDMap.get(title);\n            rottenScore = rottenMap.get(title);\n            genre = genreMap.get(title);\n            description = descriptionMap.get(title);\n            seasons = numOfSeasonsMap.get(title);\n            stream = streamMap.get(title);\n            try{\n                //check for connection\n                if (con != null) {\n                    //update table with query\n                    Statement stmt = con.createStatement();\n                    if (title != null) {\n                        movieTitleLogin += title;\n                        movieTitleLogin += \"\\n\";\n                        System.out.println(\"username: \" + userName);\n                        System.out.println(\"password: \" + password);\n                        if (lookForUser(userName) == true) {\n\n                            String addMovieQ = \"UPDATE tvShows.LogIn SET MovieTitle='\" + movieTitleLogin + \"' WHERE UserName='\" + userName + \"' AND Password='\" + password +\"'\";\n\n                            System.out.println(\"add: \" + addMovieQ);\n                            stmt.executeUpdate(addMovieQ);\n                        }\n\n                    }\n                }\n\n            }\n            catch(Exception e){\n                e.printStackTrace();\n            }\n        }\n\n    }\n\n    public String getMovieTitleLogin() {\n        return movieTitleLogin;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getReleased() {\n        return released;\n    }\n\n    public String getAge() {\n        return age;\n    }\n\n    public String getIMBD() {\n        return IMBD;\n    }\n\n    public String getRotten() {\n        return rottenScore;\n    }\n\n    public String getGenre() {\n        return genre;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public String getSeasons() {\n        return seasons;\n    }\n\n    public String getStream() {\n        return stream;\n    }\n\n    public void clear() {\n        query = \"SELECT * FROM tvShows.Shows WHERE \";\n        titleList.clear();\n        releasedMap.clear();\n        ageMap.clear();\n        IMBDMap.clear();\n        rottenMap.clear();\n        genreMap.clear();\n        descriptionMap.clear();\n        numOfSeasonsMap.clear();\n        streamMap.clear();\n        title = null;\n        released = null;\n        age = null;\n        IMBD = null;\n        rottenScore = null;\n        genre = null;\n        description = null;\n        seasons = null;\n        stream = null;\n\n    }\n\n    //add log in to table\n    public void addLogIn(String user, String pass){\n        String currentQ = \"\";\n        try{\n            //check for connection\n            if (con != null) {\n                //update table with query\n                Statement stmt = con.createStatement();\n                userName = user;\n                password = pass;\n                currentQ += \"INSERT INTO tvShows.LogIn (UserName, Password)\" + \" VALUES ('\" + user + \"', \" + \"'\" + pass + \"')\";\n                stmt.executeUpdate(currentQ);\n            }\n\n        }\n        catch(Exception e){\n            e.printStackTrace();\n        }\n    }\n\n    //looks for user\n    public Boolean lookForUser(String user){\n        String currentQ = \"\";\n        String currentUser = \"\";\n        try{\n\n            //check to see if there is connection\n            if (con != null) {\n                Statement stmt = con.createStatement();\n                currentQ += \"SELECT Username FROM tvShows.LogIn WHERE Username= '\" + user + \"'\";\n                ResultSet result = stmt.executeQuery(currentQ);\n\n                //if there is a user then return true if user is found\n                while(result.next()){\n                    currentUser = result.getString(\"Username\");\n                    if(currentUser == null){\n                        return false;\n                    }\n                    else{\n                        userName = user;\n                        return true;\n                    }\n                }\n            }\n\n        }\n        catch(Exception e){\n            e.printStackTrace();\n        }\n        return false;\n    }\n\n    //checks to see if password and username match\n    public Boolean checkPass(String user, String pass){\n        String currentQ = \"\";\n        String currentUser = \"\";\n        try{\n            //makes sure there's a connection\n            if (con != null) {\n                Statement stmt = con.createStatement();\n                currentQ += \"SELECT Username FROM tvShows.LogIn WHERE Username= '\" + user + \"' AND Password= '\" + pass + \"'\";\n                ResultSet result = stmt.executeQuery(currentQ);\n\n                //goes through the result\n                while(result.next()){\n                    userName = user;\n                    password = pass;\n                    return true;\n                }\n            }\n\n        }\n        catch(Exception e){\n            e.printStackTrace();\n        }\n        return false;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/MyConnection.java	(revision fe49f5179dce8f1a8e24454e9790be23eb7006e2)
+++ src/MyConnection.java	(date 1607625844240)
@@ -30,7 +30,7 @@
         String MySQLURL = "jdbc:mysql://localhost:3306/tvShows?useSSL=false";
 
         //get the current connection
-        URL path = MyConnection.class.getResource("connectInfo.txt");
+        URL path = MyConnection.class.getResource("login.txt");
         File file = new File(path.getFile());
         Scanner sc = new Scanner(file);
         sc.useDelimiter(" ");
@@ -297,7 +297,6 @@
                     return true;
                 }
             }
-
         }
         catch(Exception e){
             e.printStackTrace();
diff --git src/README.txt src/README.txt
new file mode 100644
