Index: src/Gui.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.FileNotFoundException;\nimport java.sql.SQLException;\nimport java.util.HashMap;\n\n\nimport javafx.application.Application;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.*;\nimport javafx.scene.layout.BorderPane;\nimport javafx.scene.layout.HBox;\nimport javafx.scene.layout.VBox;\nimport javafx.scene.paint.Color;\nimport javafx.scene.text.Font;\nimport javafx.scene.text.FontWeight;\nimport javafx.scene.text.Text;\nimport javafx.scene.text.TextAlignment;\nimport javafx.stage.Stage;\n\nimport javax.swing.*;\n\npublic class Gui extends Application {\n    HashMap<String, Scene> sceneMap;\n    Button start, logIn, findShows, cont, back;\n    ComboBox<String> genresList, ratingsRange, platformsList, ageRanges;\n    TextField userName, password;\n    String holdLogInStmt, chosenGenre, chosenAge, chosenPlatform, chosenRating;\n    Text title, description, genre, IMBD, rottenScore, age, released, seasons, stream;\n    Text listOfMovies;\n    Text logInErrorStmt;\n    private MenuBar menuBar;\n    private Menu menu;\n    private MenuItem myMovies;\n\n    MyConnection connect = new MyConnection();\n    HashMap<String, String> userPassList = new HashMap<String, String>();\n\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        launch(args);\n    }\n\n    @Override\n    public void start(Stage primaryStage) throws Exception {\n        // TODO Auto-generated method stub\n        primaryStage.setTitle(\"Look for TV shows to watch\");\n\n        sceneMap = new HashMap<String,Scene>();\n\n        Scene scene = new Scene(new HBox(), 600, 600);\n        primaryStage.setScene(scene);\n        primaryStage.show();\n\n        //buttons: logIn, start, findShows\n        start = new Button(\"START LOOKING\");\n        start.setStyle(\"-fx-background-color: SNOW;\");\n        logIn = new Button(\"LOG IN\");\n        logIn.setStyle(\"-fx-background-color: SNOW;\");\n        findShows = new Button(\"FIND SHOWS\");\n        findShows.setStyle(\"-fx-background-color: SNOW;\");\n        cont = new Button(\"CONTINUE\");\n        cont.setStyle(\"-fx-background-color: SNOW;\");\n        menuBar = new MenuBar();\n        menu = new Menu(\"MENU\");\n        myMovies = new MenuItem(\"MY MOVIES\");\n        menu.getItems().addAll(myMovies);\n        menuBar.getMenus().add(menu);\n        menuBar.setStyle(\"-fx-background-color: FLORALWHITE;\");\n        back = new Button(\"BACK\");\n\n        //change scene at start\n        start.setOnAction(e -> {\n                    primaryStage.setScene(sceneMap.get(\"logIn\"));\n                    try {\n                        connect.connect();\n                    } catch (FileNotFoundException fileNotFoundException) {\n                        fileNotFoundException.printStackTrace();\n                    }\n                }\n\n        );\n\n        //after login is clicked\n        logIn.setOnAction(e -> {\n                    //get the inputs of user and pass\n                    String userInput = userName.getText();\n                    String passInput = password.getText();\n\n                    System.out.println(\"Username: \" + userInput);\n                    System.out.println(\"Password: \" + passInput);\n\n                    //look for user and password\n                    Boolean foundUser = connect.lookForUser(userInput);\n                    Boolean correctPass = connect.checkPass(userInput, passInput);\n\n                    System.out.println(\"Username found? \" + foundUser);\n                    System.out.println(\"Password found? \" + correctPass);\n\n                    //if one of the inputs are empty then print a empty statement\n                    if(passInput.equals(\"\") || userInput.equals(\"\")){\n                        holdLogInStmt = \"missing an input\";\n                        logInErrorStmt.setText(holdLogInStmt);\n                    }\n                    //if there is none found then add\n                    else if(!foundUser){\n\n                        connect.addLogIn(userInput, passInput);\n                        System.out.println(\"Input added to table\");\n\n                        primaryStage.setScene(sceneMap.get(\"selections\"));\n                    }\n                    //else if password doesn't, match print error message\n                    else if(foundUser && !correctPass){\n                        holdLogInStmt = \"password is wrong\";\n                        System.out.println(\"Password is wrong\");\n                        logInErrorStmt.setText(holdLogInStmt);\n                    }\n                    //else if user and pass is same go to next scene\n                    else if(foundUser && correctPass){\n                        System.out.println(\"correct user and pass\");\n                        primaryStage.setScene(sceneMap.get(\"selections\"));\n                    }\n\n                }\n        );\n\n        findShows.setOnAction(e-> {\n            primaryStage.setScene(sceneMap.get(\"recommendations\"));\n            System.out.println(\"chosen platform: \" + chosenPlatform);\n            System.out.println(\"chosen genre: \" + chosenGenre);\n            System.out.println(\"chosen rating: \" + chosenRating);\n            System.out.println(\"chosen age: \" + chosenAge);\n            connect.getPlatform(chosenPlatform);\n            connect.getGenre(chosenGenre);\n            connect.getRange(chosenRating);\n            connect.getContent(chosenAge);\n            connect.runQuery();\n            connect.pickOne();\n            updateText(connect.getTitle(), connect.getReleased(), connect.getAge(), connect.getIMBD(), connect.getRotten(),\n                    connect.getGenre(), connect.getDescription(), connect.getSeasons(), connect.getStream(), connect.getMovieTitleLogin());\n            connect.clear();\n        });\n\n        cont.setOnAction(e-> {\n            genresList.getSelectionModel().clearSelection();\n            ratingsRange.getSelectionModel().clearSelection();\n            platformsList.getSelectionModel().clearSelection();\n            ageRanges.getSelectionModel().clearSelection();\n            title.setText(\"\");\n            description.setText(\"\");\n            genre.setText(\"\");\n            IMBD.setText(\"\");\n            rottenScore.setText(\"\");\n            age.setText(\"\");\n            released.setText(\"\");\n            seasons.setText(\"\");\n            stream.setText(\"\");\n            primaryStage.setScene(sceneMap.get(\"selections\"));\n        });\n\n        myMovies.setOnAction(e -> {\n            primaryStage.setScene(sceneMap.get(\"movies\"));\n        });\n\n        back.setOnAction(e -> {\n            primaryStage.setScene(sceneMap.get(\"selections\"));\n        });\n\n        sceneMap.put(\"start\", startScene());\n        sceneMap.put(\"logIn\", logInScene());\n        sceneMap.put(\"selections\", optionsScene());\n        sceneMap.put(\"recommendations\", showsScene());\n        sceneMap.put(\"movies\", myMoviesScene());\n\n        primaryStage.setScene(sceneMap.get(\"start\"));\n\n    }\n\n    //start scene\n    public Scene startScene() {\n        BorderPane pane = new BorderPane();\n\n        //welcome text\n        Text t = new Text(\"LOOKING FOR A SHOW?\");\n        t.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 30));\n        t.setTextAlignment(TextAlignment.CENTER);\n        t.setFill(Color.BURLYWOOD);\n\n        Text t2 = new Text(\"YOU CAME TO THE RIGHT PLACE\");\n        t2.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 20));\n        t2.setTextAlignment(TextAlignment.CENTER);\n        t2.setFill(Color.BURLYWOOD);\n\n\n        //organize with vbox\n        VBox paneCenter = new VBox(10, t, t2, start);\n        paneCenter.setPadding(new Insets(100));\n        paneCenter.setAlignment(Pos.CENTER);\n        paneCenter.setStyle(\"-fx-background-color: azure;\");\n        addToGenre();\n        pane.setCenter(paneCenter);\n\n        return new Scene(pane, 700, 700);\n    }\n\n    //log into your account to get the list of shows already watched\n    public Scene logInScene(){\n        BorderPane pane = new BorderPane();\n\n        //username text before text field\n        Text user = new Text(\"UserName: \\n\");\n        user.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 20));\n        user.setFill(Color.SEAGREEN);\n\n        //password text before text field\n        Text pass = new Text(\"Password: \\n\");\n        pass.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 20));\n        pass.setFill(Color.SEAGREEN);\n\n        //initialize text fields\n        userName = new TextField();\n        userName.setMaxWidth(300);\n        password = new TextField();\n\n        //hBox - userName\n        HBox holdUser = new HBox(10, user, userName);\n        holdUser.setPadding(new Insets(10));\n        holdUser.setAlignment(Pos.CENTER);\n\n        //hBox - password\n        HBox holdPass = new HBox(10, pass, password);\n        holdPass.setPadding(new Insets(10));\n        holdPass.setAlignment(Pos.CENTER);\n\n        logInErrorStmt = new Text();\n        logInErrorStmt.setFont(Font.font(\"Helvetica\", FontWeight.SEMI_BOLD, 15));\n        logInErrorStmt.setFill(Color.MINTCREAM);\n\n        //vBox - vertical box to keep user and pass\n        VBox paneCenter = new VBox(10, holdUser, holdPass, logIn, logInErrorStmt);\n        paneCenter.setPadding(new Insets(10));\n        paneCenter.setAlignment(Pos.CENTER);\n\n        pane.setCenter(paneCenter);\n        pane.setStyle(\"-fx-background-color: thistle;\");\n\n        return new Scene(pane, 700, 700);\n    }\n\n    public void addToGenre(){\n        genresList = new ComboBox<>();\n        genresList.getItems().addAll(\"Animation\", \"Action & Adventure\", \"Anime\", \"Biography\", \"Comedy\", \"Crime\", \"Children\", \"Cult\",\n                \"Drama\", \"Documentary\", \"Fantasy\", \"Family\", \"Foods\", \"Game Show\", \"History\", \"Horror\", \"LGBTQ\", \"Netflix\", \"Mystery\", \"Musical\", \"Science-Fiction\",\n                \"Sport\", \"Travel\", \"Thriller\", \"Reality\", \"Romance\", \"Stand-up & Talk\");\n    }\n\n    public void addToRatings(){\n        ratingsRange = new ComboBox<>();\n        ratingsRange.getItems().addAll(\"0-4\", \"5-7\", \"8-10\");\n    }\n\n    public void  addToPlatforms(){\n        platformsList = new ComboBox<>();\n        platformsList.getItems().addAll(\"Hulu\", \"Netflix\", \"Prime Video\", \"Disney+\");\n    }\n\n    public void addToAge(){\n        ageRanges = new ComboBox<>();\n        ageRanges.getItems().addAll(\"18\", \"16\", \"7\");\n    }\n\n    public void updateText(String titleStr, String releasedStr, String ageStr, String IMBDStr, String rottenStr,\n                           String genreStr, String descStr, String seasonStr, String streamStr, String movieList) {\n        System.out.println(\"titleStr: \" + titleStr);\n\n        if (titleStr != null ) {\n            title.setText(\"Title: \" + titleStr);\n            if (movieList != null) {\n                listOfMovies.setText(movieList);\n            }\n\n            released.setText(\"Released Year: \" + releasedStr);\n            age.setText(\"Content Rating: \" + ageStr);\n            IMBD.setText(\"IMBD Rating: \" + IMBDStr);\n            rottenScore.setText(\"Rotten Score: \" + rottenStr);\n            genre.setText(\"Genre: \" + genreStr);\n            description.setText(\"Description: \" + descStr);\n            String temp = seasonStr;\n            String delims = \"S\";\n            String[] tokens = temp.split(delims);\n\n            String seasonNum = tokens[0];\n            seasons.setText(\"No. of Seasons: \" + seasonNum + \" Season(s)\");\n            stream.setText(\"Streaming Platform: \" + streamStr);\n        }\n        else {\n            title.setText(\"No TV Shows Match... Please Try Again!\" );\n        }\n    }\n    \n    //scene to keep record of the options\n    public Scene optionsScene() {\n        BorderPane pane = new BorderPane();\n\n        //vbox to organize the items\n        VBox paneCenter = new VBox(10);\n        paneCenter.setAlignment(Pos.CENTER);\n\n        //genre - text and declare comboBox\n        Text t2 = new Text(550, 20, \"WHAT GENRE ARE YOU INTERESTED IN? \\n\");\n        t2.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 20));\n        t2.setFill(Color.web(\"#401921\"));\n        addToGenre();\n\n        //ratings - text and declare comboBox\n        Text t3 = new Text(550, 20, \"WHAT RANGE SHOULD THE RATING BE? \\n\");\n        t3.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 20));\n        t3.setFill(Color.web(\"#401921\"));\n        addToRatings();\n\n        //platform - text and declare comboBox\n        Text t4 = new Text(550, 20, \"WHAT PLATFORM DO YOU WANT TO WATCH ON? \\n\");\n        t4.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 20));\n        t4.setFill(Color.web(\"#401921\"));\n        addToPlatforms();\n\n        //Age - text and declare comboBox\n        Text t5 = new Text(550, 20, \"WHAT SHOULD BE THE CONTENT RATING? \\n\");\n        t5.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 20));\n        t5.setFill(Color.web(\"#401921\"));\n        addToAge();\n\n        //set value chosen from genres list\n        genresList.setOnAction(e->{\n            if(genresList.getValue() != null){\n                chosenGenre = genresList.getValue();\n            }\n        });\n\n        //set value chosen from ratings list\n        ratingsRange.setOnAction(e->{\n            if(ratingsRange.getValue() != null){\n                chosenRating = ratingsRange.getValue();\n            }\n        });\n\n        //set value chosen from age list\n        ageRanges.setOnAction(e->{\n            if(ageRanges.getValue() != null){\n                chosenAge = ageRanges.getValue();\n            }\n        });\n\n        //set value chosen from platform list\n        platformsList.setOnAction(e->{\n            if(platformsList.getValue() != null){\n                chosenPlatform = platformsList.getValue();\n            }\n        });\n\n\n        //all items to vbox and reset pane\n        paneCenter.getChildren().addAll(t4, platformsList, t2, genresList, t3, ratingsRange, t5, ageRanges, findShows);\n        pane.setStyle(\"-fx-background-color:#ad8989\");\n        pane.setTop(menuBar);\n        pane.setCenter(paneCenter);\n\n        return new Scene(pane, 700, 700);\n\n    }\n\n    //shows the recommended shows scene\n    public Scene showsScene(){\n        BorderPane pane = new BorderPane();\n\n        //header text\n        Text rec = new Text(550, 20, \"HERE IS YOUR RECOMMENDATION: \\n\");\n        rec.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 30));\n        rec.setFill(Color.FLORALWHITE);\n\n        title = new Text();\n        title.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 20));\n        title.setFill(Color.OLDLACE);\n\n        released = new Text();\n        released.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 14));\n        released.setFill(Color.PAPAYAWHIP);\n\n        age = new Text();\n        age.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 14));\n        age.setFill(Color.PAPAYAWHIP);\n\n        IMBD = new Text();\n        IMBD.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 14));\n        IMBD.setFill(Color.PAPAYAWHIP);\n\n        rottenScore = new Text();\n        rottenScore.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 14));\n        rottenScore.setFill(Color.PAPAYAWHIP);\n\n        genre = new Text();\n        genre.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 14));\n        genre.setFill(Color.PAPAYAWHIP);\n\n        description = new Text();\n        description.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 14));\n        description.setWrappingWidth(600);\n        description.setFill(Color.PAPAYAWHIP);\n\n        seasons = new Text();\n        seasons.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 14));\n        seasons.setFill(Color.PAPAYAWHIP);\n\n        stream = new Text();\n        stream.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 14));\n        stream.setFill(Color.PAPAYAWHIP);\n\n        //vbox to organize\n        VBox paneCenter = new VBox(10, rec, title, released, age, rottenScore, genre, description, seasons, stream, cont);\n        paneCenter.setAlignment(Pos.CENTER);\n        pane.setCenter(paneCenter);\n        pane.setStyle(\"-fx-background-color: LIGHTSTEELBLUE;\");\n        return new Scene(pane, 700, 700);\n    }\n\n    public Scene myMoviesScene() {\n        Text moviesHeader = new Text(\"LIST OF MOVIES\");\n        moviesHeader.setFont(Font.font(\"Helvetica\",FontWeight.BOLD,20));\n        moviesHeader.setFill(Color.BURLYWOOD);\n\n        listOfMovies = new Text(\" \");\n        listOfMovies.setFont(Font.font(\"Helvetica\",FontWeight.BOLD,14));\n        listOfMovies.setFill(Color.BURLYWOOD);\n\n        back.setStyle(\"-fx-background-color: FLORALWHITE;\");\n\n        VBox pane = new VBox(moviesHeader, listOfMovies, back);\n        pane.setSpacing(40.0);\n        pane.setAlignment(Pos.CENTER);\n\n        BorderPane bPane = new BorderPane();\n        bPane.setCenter(pane);\n        bPane.setStyle(\"-fx-background-color: MISTYROSE;\");\n        return new Scene(bPane, 700, 700);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Gui.java	(revision fe49f5179dce8f1a8e24454e9790be23eb7006e2)
+++ src/Gui.java	(date 1607592409858)
@@ -298,7 +298,7 @@
             title.setText("No TV Shows Match... Please Try Again!" );
         }
     }
-    
+
     //scene to keep record of the options
     public Scene optionsScene() {
         BorderPane pane = new BorderPane();
